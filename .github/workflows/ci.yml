name: CI
on: [pull_request, push]

jobs:
    linux:
      name: "Linux Py${{ matrix.PYTHON_VERSION }} - ${{ matrix.UPSTREAM_DEV }}"
      runs-on: ubuntu-latest
      env:
        CI: True
        PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      strategy:
        fail-fast: false
        matrix:
          PYTHON_VERSION: ['3.6', '3.7', '3.8']
          UPSTREAM_DEV: ['default']
          include:
            - UPSTREAM_DEV: 'nightlies'
              PYTHON_VERSION: '3.8'
      steps:
        - name: Checkout branch
          uses: actions/checkout@v1.2.0
        - name: Run CI
          shell: bash -l {0}
          run: ./ci/circle_build_linux.sh ${{ matrix.PYTHON_VERSION }} ${{ matrix.UPSTREAM_DEV }}
        - name: Publish package
          if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && matrix.PYTHON_VERSION == '3.7'
          uses: pypa/gh-action-pypi-publish@v1.3.1
          with:
            user: __token__
            password: ${{ secrets.pypi_password }}
        - uses: codecov/codecov-action@v1
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            file: ./coverage.xml
    win:
      name: "Windows Py${{ matrix.PYTHON_VERSION }}"
      runs-on: windows-latest
      env:
        CI: True
        PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      strategy:
        fail-fast: false
        matrix:
          PYTHON_VERSION: ['3.6', '3.7', '3.8']
      steps:
        - name: Checkout branch
          uses: actions/checkout@v2
        - uses: goanpeca/setup-miniconda@v1
          with:
            auto-update-conda: true
            miniconda-version: "latest"
            mamba-version: "*"
            python-version: ${{ matrix.PYTHON_VERSION }}
            activate-environment: fletcher
            environment-file: environment.yml
            channels: conda-forge
        - run: python -m pip install -e . --no-build-isolation --no-use-pep517
        - run: pytest
